"use strict";(self.webpackChunkditsmod_github_io=self.webpackChunkditsmod_github_io||[]).push([[317],{2806:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=n(4848),o=n(5680);const i={sidebar_position:3},s="@ditsmod/jwt",a={id:"native-modules/jwt",title:"@ditsmod/jwt",description:"The @ditsmod/jwt module integrates jsonwebtoken into a Ditsmod authentication application based on JSON Web Token. You can view a finished example of using this module in the Ditsmod repository.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/02-native-modules/03-jwt.md",sourceDirName:"02-native-modules",slug:"/native-modules/jwt",permalink:"/en/native-modules/jwt",draft:!1,unlisted:!1,editUrl:"https://github.com/ditsmod/ditsmod/edit/main/website/i18n/en/docusaurus-plugin-content-docs/current/02-native-modules/03-jwt.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"@ditsmod/session-cookie",permalink:"/en/native-modules/session-cookie"},next:{title:"@ditsmod/cors",permalink:"/en/native-modules/cors"}},c={},d=[{value:"Installation and importing",id:"installation-and-importing",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"ditsmodjwt",children:"@ditsmod/jwt"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"@ditsmod/jwt"})," module integrates ",(0,r.jsx)(t.a,{href:"https://github.com/auth0/node-jsonwebtoken",children:"jsonwebtoken"})," into a Ditsmod authentication application based on ",(0,r.jsx)(t.a,{href:"https://www.rfc-editor.org/rfc/rfc7519",children:"JSON Web Token"}),". You can view a finished example of using this module in the ",(0,r.jsx)(t.a,{href:"https://github.com/ditsmod/ditsmod/tree/main/examples/14-auth-jwt",children:"Ditsmod repository"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"installation-and-importing",children:"Installation and importing"}),"\n",(0,r.jsx)(t.p,{children:"Installation:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm i @ditsmod/jwt\n"})}),"\n",(0,r.jsx)(t.p,{children:"Importing:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:"{7,10}",children:"import { featureModule } from '@ditsmod/core';\nimport { JwtModule } from '@ditsmod/jwt';\n\nimport { AuthController } from './auth.controller.js';\nimport { BearerGuard } from './bearer.guard.js';\n\nconst moduleWithParams = JwtModule.withParams({ secret: 'hard-to-guess-secret', signOptions: { expiresIn: '2m' } });\n\n@featureModule({\n  imports: [moduleWithParams],\n  controllers: [AuthController],\n  providersPerReq: [BearerGuard],\n  exports: [BearerGuard]\n})\nexport class AuthModule {}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["As you can see, you can pass certain options to ",(0,r.jsx)(t.code,{children:"JwtModule"})," during import."]}),"\n",(0,r.jsxs)(t.p,{children:["Now within ",(0,r.jsx)(t.code,{children:"AuthModule"})," you can use ",(0,r.jsx)(t.code,{children:"JwtService"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:"{7,18-21}",children:"import { injectable, CanActivate, Injector, RequestContext } from '@ditsmod/core';\nimport { JwtService, VerifyErrors, JWT_PAYLOAD } from '@ditsmod/jwt';\n\n@injectable()\nexport class BearerGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private injector: Injector\n  ) {}\n\n  async canActivate(ctx: RequestContext) {\n    const authValue = ctx.nodeReq.headers.authorization?.split(' ');\n    if (authValue?.[0] != 'Bearer') {\n      return false;\n    }\n\n    const token = authValue[1];\n    const payload = await this.jwtService\n      .verifyWithSecret(token)\n      .then((payload) => payload)\n      .catch((err: VerifyErrors) => false as const); // Here `as const` to narrow down returned type.\n\n    if (payload) {\n      this.injector.setByToken(JWT_PAYLOAD, payload);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["You can read what the guards are in the ",(0,r.jsx)(t.a,{href:"/components-of-ditsmod-app/guards",children:"Guards"})," section."]})]})}function u(e={}){const{wrapper:t}={...(0,o.RP)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},5680:(e,t,n)=>{n.d(t,{RP:()=>d});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=d(n),m=o,h=p["".concat(c,".").concat(m)]||p[m]||l[m]||i;return n?r.createElement(h,s(s({ref:t},u),{},{components:n})):r.createElement(h,s({ref:t},u))}));u.displayName="MDXCreateElement"}}]);