"use strict";(self.webpackChunkditsmod_github_io=self.webpackChunkditsmod_github_io||[]).push([[681],{5380:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var o=n(4848),s=n(8453);const r={sidebar_position:5},i="@ditsmod/return",d={id:"native-modules/return",title:"@ditsmod/return",description:"The @ditsmod/return module allows you to send an HTTP response using the return operator within a method that binds to a specific route:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/02-native-modules/05-return.md",sourceDirName:"02-native-modules",slug:"/native-modules/return",permalink:"/en/native-modules/return",draft:!1,unlisted:!1,editUrl:"https://github.com/ditsmod/ditsmod/edit/main/website/i18n/en/docusaurus-plugin-content-docs/current/02-native-modules/05-return.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"@ditsmod/cors",permalink:"/en/native-modules/cors"},next:{title:"@ditsmod/i18n",permalink:"/en/native-modules/i18n"}},l={},a=[{value:"Installation and importing",id:"installation-and-importing",level:2},{value:"HTTP statuses and headers",id:"http-statuses-and-headers",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"ditsmodreturn",children:"@ditsmod/return"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"@ditsmod/return"})," module allows you to send an HTTP response using the ",(0,o.jsx)(t.code,{children:"return"})," operator within a method that binds to a specific route:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import { controller, route } from '@ditsmod/core';\n\n@controller()\nexport class HelloWorldController {\n  @route('GET')\n  async tellHello() {\n    return 'Hello World!\\n';\n  }\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["If you want such functionality to be available only in a separate module, you can view ",(0,o.jsx)(t.a,{href:"https://github.com/ditsmod/ditsmod/tree/main/examples/18-return",children:"a finished example in the Ditsmod repository"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"installation-and-importing",children:"Installation and importing"}),"\n",(0,o.jsx)(t.p,{children:"Installation:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"npm i @ditsmod/return\n"})}),"\n",(0,o.jsxs)(t.p,{children:["When importing ",(0,o.jsx)(t.code,{children:"ReturnModule"}),", you also need to ",(0,o.jsx)(t.a,{href:"/developer-guides/providers-collisions",children:"resolve a collision"})," in the ",(0,o.jsx)(t.code,{children:"resolvedCollisionsPerReq"})," array, because ",(0,o.jsx)(t.code,{children:"ReturnModule"})," substitutes the provider for the ",(0,o.jsx)(t.code,{children:"HttpBackend"})," token, which is also substitutes under the hood in ",(0,o.jsx)(t.code,{children:"@ditsmod/core"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:"{6,10,12}",children:"import { HttpBackend, rootModule } from '@ditsmod/core';\nimport { ReturnModule } from '@ditsmod/return';\n\n@rootModule({\n  imports: [\n    ReturnModule\n    // ...\n  ],\n  resolvedCollisionsPerReq: [\n    [HttpBackend, ReturnModule]\n  ],\n  exports: [ReturnModule],\n  // ...\n})\nexport class AppModule {}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["As you can see, in addition to importing, the ",(0,o.jsx)(t.code,{children:"ReturnModule"})," is also exported in the root module so that the functionality provided by the ",(0,o.jsx)(t.code,{children:"ReturnModule"})," module is available to any controller."]}),"\n",(0,o.jsx)(t.h2,{id:"http-statuses-and-headers",children:"HTTP statuses and headers"}),"\n",(0,o.jsxs)(t.p,{children:["By default, the interceptor in the ",(0,o.jsx)(t.code,{children:"@ditsmod/return"})," module automatically substitutes the 201 status for requests with the ",(0,o.jsx)(t.code,{children:"POST"})," HTTP method, the 204 - for ",(0,o.jsx)(t.code,{children:"OPTIONS"}),", and the 200 status - for the rest. If you need to change this behavior, you should use the standard mechanism (without using the ",(0,o.jsx)(t.code,{children:"return"})," statement):"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import { controller, Res, route, Status } from '@ditsmod/core';\n\n@controller()\nexport class UsersController {\n  constructor(private res: Res) {}\n\n  @route('GET')\n  getUsersList() {\n    // ...\n    this.res.sendJson({ error: 'Page not found' }, Status.NOT_FOUND);\n  }\n}\n"})})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var o=n(6540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);