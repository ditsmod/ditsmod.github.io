"use strict";(self.webpackChunkditsmod_github_io=self.webpackChunkditsmod_github_io||[]).push([[559],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),p=s(n),c=o,g=p["".concat(l,".").concat(c)]||p[c]||m[c]||i;return n?r.createElement(g,a(a({ref:t},d),{},{components:n})):r.createElement(g,a({ref:t},d))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=c;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[p]="string"==typeof e?e:o,a[1]=u;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:0},a="@ditsmod/routing",u={unversionedId:"native-modules/routing",id:"native-modules/routing",title:"@ditsmod/routing",description:"The @ditsmod/routing module implements a router with the Router interface:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/02-native-modules/00-routing.md",sourceDirName:"02-native-modules",slug:"/native-modules/routing",permalink:"/en/native-modules/routing",draft:!1,editUrl:"https://github.com/ditsmod/ditsmod/edit/main/website/i18n/en/docusaurus-plugin-content-docs/current/02-native-modules/00-routing.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Testing",permalink:"/en/developer-guides/testing"},next:{title:"@ditsmod/body-parser",permalink:"/en/native-modules/body-parser"}},l={},s=[{value:"Installation and importing",id:"installation-and-importing",level:2},{value:"Custom router integration",id:"custom-router-integration",level:2}],d={toc:s},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ditsmodrouting"},"@ditsmod/routing"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@ditsmod/routing")," module implements a router with the ",(0,o.kt)("inlineCode",{parentName:"p"},"Router")," interface:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface Router {\n  on(method: HttpMethod, path: string, handle: RouteHandler): this;\n\n  all(path: string, handle: RouteHandler): this;\n\n  find(method: HttpMethod, path: string): RouterReturns;\n}\n\ntype RouteHandler = (\n  nodeReq: NodeRequest,\n  nodeRes: NodeResponse,\n  params: PathParam[],\n  queryString: any\n) => Promise<void>;\n\nclass RouterReturns {\n  handle: RouteHandler | null;\n  params: PathParam[] | null;\n}\n\ninterface PathParam {\n  key: string;\n  value: string;\n}\n")),(0,o.kt)("p",null,"A ready-made example of using this module can be found in any example in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ditsmod/ditsmod/tree/main/examples"},"Ditsmod repository"),"."),(0,o.kt)("h2",{id:"installation-and-importing"},"Installation and importing"),(0,o.kt)("p",null,"Installation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @ditsmod/routing\n")),(0,o.kt)("p",null,"Importing:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { rootModule } from '@ditsmod/core';\nimport { RoutingModule } from '@ditsmod/routing';\n\n@rootModule({\n  imports: [RoutingModule],\n  // ..\n})\nexport class AppModule {}\n")),(0,o.kt)("h2",{id:"custom-router-integration"},"Custom router integration"),(0,o.kt)("p",null,"If you want to integrate a custom router for the Ditsmod application, it is enough for your router to implement the above ",(0,o.kt)("inlineCode",{parentName:"p"},"Router")," interface, after which it can be added to the providers at the application level:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { featureModule, Router } from '@ditsmod/core';\n\nimport { MyRouter } from './my-router.js';\n\n@featureModule({\n  providersPerApp: [{ token: Router, useClass: MyRouter }],\n})\nexport class MyCustomRouterModule {}\n")))}m.isMDXComponent=!0}}]);