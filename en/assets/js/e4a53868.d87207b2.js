"use strict";(self.webpackChunkditsmod_github_io=self.webpackChunkditsmod_github_io||[]).push([[681],{5959:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var r=n(4848),o=n(5680);const s={sidebar_position:5},i="@ditsmod/return",d={id:"native-modules/return",title:"@ditsmod/return",description:"The @ditsmod/return module allows you to send an HTTP response using the return operator within a method that binds to a specific route:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/02-native-modules/05-return.md",sourceDirName:"02-native-modules",slug:"/native-modules/return",permalink:"/en/native-modules/return",draft:!1,unlisted:!1,editUrl:"https://github.com/ditsmod/ditsmod/edit/main/website/i18n/en/docusaurus-plugin-content-docs/current/02-native-modules/05-return.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"@ditsmod/cors",permalink:"/en/native-modules/cors"},next:{title:"@ditsmod/i18n",permalink:"/en/native-modules/i18n"}},l={},a=[{value:"Installation and importing",id:"installation-and-importing",level:2},{value:"HTTP statuses and headers",id:"http-statuses-and-headers",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"ditsmodreturn",children:"@ditsmod/return"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"@ditsmod/return"})," module allows you to send an HTTP response using the ",(0,r.jsx)(t.code,{children:"return"})," operator within a method that binds to a specific route:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { controller, route } from '@ditsmod/core';\n\n@controller()\nexport class HelloWorldController {\n  @route('GET')\n  async tellHello() {\n    return 'Hello World!\\n';\n  }\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["If you want such functionality to be available only in a separate module, you can view ",(0,r.jsx)(t.a,{href:"https://github.com/ditsmod/ditsmod/tree/main/examples/18-return",children:"a finished example in the Ditsmod repository"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"installation-and-importing",children:"Installation and importing"}),"\n",(0,r.jsx)(t.p,{children:"Installation:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm i @ditsmod/return\n"})}),"\n",(0,r.jsxs)(t.p,{children:["When importing ",(0,r.jsx)(t.code,{children:"ReturnModule"}),", you also need to ",(0,r.jsx)(t.a,{href:"/developer-guides/providers-collisions",children:"resolve a collision"})," in the ",(0,r.jsx)(t.code,{children:"resolvedCollisionsPerReq"})," array, because ",(0,r.jsx)(t.code,{children:"ReturnModule"})," substitutes the provider for the ",(0,r.jsx)(t.code,{children:"HttpBackend"})," token, which is also substitutes under the hood in ",(0,r.jsx)(t.code,{children:"@ditsmod/core"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:"{6,10,12}",children:"import { HttpBackend, rootModule } from '@ditsmod/core';\nimport { ReturnModule } from '@ditsmod/return';\n\n@rootModule({\n  imports: [\n    ReturnModule\n    // ...\n  ],\n  resolvedCollisionsPerReq: [\n    [HttpBackend, ReturnModule]\n  ],\n  exports: [ReturnModule],\n  // ...\n})\nexport class AppModule {}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["As you can see, in addition to importing, the ",(0,r.jsx)(t.code,{children:"ReturnModule"})," is also exported in the root module so that the functionality provided by the ",(0,r.jsx)(t.code,{children:"ReturnModule"})," module is available to any controller."]}),"\n",(0,r.jsx)(t.h2,{id:"http-statuses-and-headers",children:"HTTP statuses and headers"}),"\n",(0,r.jsxs)(t.p,{children:["By default, the interceptor in the ",(0,r.jsx)(t.code,{children:"@ditsmod/return"})," module automatically substitutes the 201 status for requests with the ",(0,r.jsx)(t.code,{children:"POST"})," HTTP method, the 204 - for ",(0,r.jsx)(t.code,{children:"OPTIONS"}),", and the 200 status - for the rest. If you need to change this behavior, you should use the standard mechanism (without using the ",(0,r.jsx)(t.code,{children:"return"})," statement):"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { controller, Res, route, Status } from '@ditsmod/core';\n\n@controller()\nexport class UsersController {\n  constructor(private res: Res) {}\n\n  @route('GET')\n  getUsersList() {\n    // ...\n    this.res.sendJson({ error: 'Page not found' }, Status.NOT_FOUND);\n  }\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.RP)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},5680:(e,t,n)=>{n.d(t,{RP:()=>a});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),a=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),h=a(n),p=o,m=h["".concat(l,".").concat(p)]||h[p]||c[p]||s;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));u.displayName="MDXCreateElement"}}]);